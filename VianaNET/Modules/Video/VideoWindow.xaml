<ad:DockableContent
	x:Class="VianaNET.VideoWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Viana="clr-namespace:VianaNET"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:lex="http://schemas.root-project.org/xaml/presentation"
    lex:LocalizeDictionary.DesignCulture="de"
    Width="630"
    Height="436" Title="{lex:LocText VianaNET:Labels:VideoWindowTitle}" 
  DockableStyle="Dockable" HideOnClose="False">
  <ad:DockableContent.Resources>
    <ResourceDictionary Source="/VianaNET;component/CustomStyles/Controls/VianaStyle.xaml"/>
  </ad:DockableContent.Resources>
  <ad:DockableContent.Icon>
    <Image Source="..\..\Images\Video16.png" Height="16" Width="16"/>
  </ad:DockableContent.Icon>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="40"/>
    </Grid.RowDefinitions>
    <Grid Grid.Row="0" Name="ContentPanel" Background="{Binding Path=GradientBackground, Source={x:Static Viana:Calibration.Instance}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid Name="LeftVideoPanel" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
        <Grid.RenderTransform>
          <ScaleTransform ScaleX="1" ScaleY="-1"/>
        </Grid.RenderTransform>

        <Image Name="VideoImage" 
               HorizontalAlignment="Center" 
               Source="{Binding Path=VideoSource, Source={x:Static Viana:Video.Instance}}"
               >
        </Image>
        <Canvas Name="OverlayCanvas" SizeChanged="OverlayCanvas_SizeChanged"
                Width="{Binding ElementName=VideoImage, Path=ActualWidth}"
                Height="{Binding ElementName=VideoImage, Path=ActualHeight}">
          <Path Name="OriginPath" Stroke="Red" StrokeThickness="1" Visibility="Hidden">
            <Path.Data>
              <GeometryGroup FillRule="EvenOdd">
                <LineGeometry StartPoint="2,5" EndPoint="8,5" />
                <LineGeometry StartPoint="5,2" EndPoint="5,8" />
                <EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5"/>
              </GeometryGroup>
            </Path.Data>
          </Path>
          <Label Name="frameRateLabel"></Label>
          <Line Name="RulerLine" X1="0" Y1="0" X2="50" Y2="50" Stroke="Aquamarine" StrokeThickness="1" Visibility="Hidden" />
          <Border RenderTransformOrigin="0.5,0.5" Name="RulerLabelBorder" Background="#99FFFFFF" CornerRadius="3" Visibility="Hidden" >
            <Border.RenderTransform>
              <ScaleTransform ScaleX="1" ScaleY="-1"/>
            </Border.RenderTransform>
            <Label Name="RulerLabel" Padding="1" 
                   Content="{Binding Path=RulerValueInRulerUnits,
              Source={x:Static Viana:Calibration.Instance},
              Converter={StaticResource RulerUnitStringConverter}, 
              ConverterParameter={StaticResource PositionMeasurement}}"/>
          </Border>
          <Line Name="BlobHorizontalLine" Visibility="Hidden" Stroke="Red" StrokeThickness="2" X1="0" X2="{Binding ElementName=VideoImage, Path=ActualWidth}" Y1="100" Y2="100"/>
          <Line Name="BlobVerticalLine" Visibility="Hidden" Stroke="Red" StrokeThickness="2" X1="350" X2="350" Y1="0" Y2="{Binding ElementName=VideoImage, Path=ActualHeight}"/>
          <Line Name="TopLine" Visibility="Hidden" Stroke="#55AAAAAA" StrokeThickness="3" X1="0" X2="200" Y1="10" Y2="10" MouseEnter="TopLine_MouseEnter" MouseLeave="Line_MouseLeave" MouseLeftButtonDown="Line_MouseLeftButtonDown" MouseMove="Line_MouseMove" MouseLeftButtonUp="Line_MouseLeftButtonUp" />
          <Line Name="LeftLine" Visibility="Hidden" Stroke="#55AAAAAA" StrokeThickness="3" X1="10" X2="10" Y1="0" Y2="100" MouseEnter="LeftLine_MouseEnter" MouseLeave="Line_MouseLeave" MouseLeftButtonDown="Line_MouseLeftButtonDown" MouseLeftButtonUp="Line_MouseLeftButtonUp" MouseMove="Line_MouseMove" />
          <Line Name="BottomLine" Visibility="Hidden" Stroke="#55AAAAAA" StrokeThickness="3" X1="0" X2="100" Y1="100" Y2="100" MouseEnter="BottomLine_MouseEnter" MouseLeave="Line_MouseLeave" MouseLeftButtonDown="Line_MouseLeftButtonDown" MouseLeftButtonUp="Line_MouseLeftButtonUp" MouseMove="Line_MouseMove" />
          <Line Name="RightLine" Visibility="Hidden" Stroke="#55AAAAAA" StrokeThickness="3" X1="100" X2="100" Y1="0" Y2="100" MouseEnter="RightLine_MouseEnter" MouseLeave="Line_MouseLeave" MouseLeftButtonDown="Line_MouseLeftButtonDown" MouseLeftButtonUp="Line_MouseLeftButtonUp" MouseMove="Line_MouseMove" />
          <Path Name="OuterRegion" Visibility="Hidden" Fill="#55AAAAAA">
            <Path.Data>
              <CombinedGeometry GeometryCombineMode="Xor">
                <CombinedGeometry.Geometry1>
                  <RectangleGeometry Rect="0,0,100,100"/>
                </CombinedGeometry.Geometry1>
                <CombinedGeometry.Geometry2>
                  <RectangleGeometry Rect="10,10,80,80" />
                </CombinedGeometry.Geometry2>
              </CombinedGeometry>
            </Path.Data>
          </Path>
        </Canvas>
      </Grid>
      <Viana:BlobsControl Width="Auto" 
                          Height="Auto" 
                          Visibility="{Binding Path=ImageProcessing.IsTargetColorSet, Source={x:Static Viana:Video.Instance}, Converter={StaticResource BoolVisibleConverter}}"
                          Grid.Column="1" 
                          x:Name="BlobsControl"/>
    </Grid>
    <Grid Background="{StaticResource PropertiesBackgroundBrush}" Height="40" Grid.RowSpan="2" VerticalAlignment="Bottom">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" MinWidth="100" />
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="10,0,10,0" >
        <Viana:ImageButton x:Name="btnRecord" Height="25" Width="25" ImageSource="/VianaNET;component/Images/Record16.png" Click="btnRecord_Click" />
        <Viana:ImageButton x:Name="btnStart" Height="25" Width="25" ImageSource="/VianaNET;component/Images/Start16.png" Click="btnStart_Click" />
        <Viana:ImageButton x:Name="btnPause" Height="25" Width="25" ImageSource="/VianaNET;component/Images/Pause16.png" Click="btnPause_Click" Visibility="Collapsed"/>
        <Viana:ImageButton x:Name="btnStop" Height="25" Width="25" ImageSource="/VianaNET;component/Images/Stop16.png" Click="btnStop_Click" />
        <Viana:ImageButton x:Name="btnRevert" Height="25" Width="25" ImageSource="/VianaNET;component/Images/Revert16.png" Click="btnRevert_Click"/>
      </StackPanel>
      <Viana:MediaSlider
        Grid.Column="1" 
        x:Name="timelineSlider" 
        IsSelectionRangeEnabled="True" 
        TickDownClicked="timelineSlider_TickDownClicked"
        TickUpClicked="timelineSlider_TickUpClicked"
        FrameTimeInNanoSeconds="{Binding Path=VideoElement.FrameTimeInNanoSeconds, Source={x:Static Viana:Video.Instance}}"
        Maximum="{Binding Path=VideoPlayerElement.MediaDurationInMS, Source={x:Static Viana:Video.Instance}}"
        SelectionStart="{Binding Path=VideoPlayerElement.SelectionStart, Source={x:Static Viana:Video.Instance}}"
        SelectionEnd="{Binding Path=VideoPlayerElement.SelectionEnd, Source={x:Static Viana:Video.Instance}}"
        SmallChange="1" 
        TickPlacement="BottomRight" 
        Interval="1" 
        Minimum="0"
        Thumb.DragStarted="timelineSlider_DragStarted"
        Thumb.DragCompleted="timelineSlider_DragCompleted"
        Thumb.DragDelta="timelineSlider_DragDelta"/>
    </Grid>
  </Grid>
</ad:DockableContent>
